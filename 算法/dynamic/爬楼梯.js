/**
 * 题目描述：假设你正在爬楼梯，需要n阶才能到达楼顶，每次你可以爬1阶或者2个台阶。
 * 你有多少种不同的方法可以爬到楼顶呢
 * 
 * 给定n是一个正整数
 * 
 * 输入: 2
 * 输出: 2
 * 两种解法: 1 + 1 或者 一次2阶
 * 
 * 输入：3
 * 输出：3
 * 1 + 1 + 1, 1 + 2, 2 + 1
 * 
 * 解题思路：使用动态规划
 * 第一阶台阶：一种解法
 * 第二阶台阶：两种解法
 * 第n阶台阶：从n - 1级台阶爬一级，或者从n - 2级台阶爬2级
 * 
 * fn = f(n - 1) + f(n - 2)
 */

function climpStairs(n) {
  const dp = []
  dp[0] = 1
  dp[1] = 1
  for (let i = 2; i <= n; i++) {
    dp[i] = dp[i - 1] + dp[ i - 2]
  }
  return dp[i]
}